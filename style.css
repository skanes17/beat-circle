body {
  font-family: Arial, Helvetica, sans-serif;
  background: linear-gradient(135deg, #525252 0%, #323232 100%);
  color: #222f3e;
  margin: 0;
  padding: 0;
}

h1 {
  font-size: 250%;
  color: #f4f4f8;
  margin: 0;
  padding: 1%;
  border-width: 2px;
  border-style: solid;
  /*border-color:#ffe5df; clear comment to reintroduce border*/
  border-color: transparent;
  border-radius: 5px;
  text-shadow: 0px 3px 2px rgba(0, 0, 0, 1);
}

a {
  color: #f3aca1;
  font-weight: bold;
  text-decoration: none;
}

.divStyle {
  padding: 1%;
  border-width: 2px;
  border-style: dashed;
  border-color: transparent;
  background-color: white;
}

.roundBorder {
  border-radius: 10px;
}

#container {
  border-style: dashed;
  border-color: lightgray;
  border-radius: 8px;
  width: 70%;
  margin: auto;
  background-color: #c8d6e5;
  box-shadow: 5px 5px 15px rgba(0, 0, 0, 0.5);
}

.button {
  background-color: #ced5db;
  border: none;
  color: black;
  text-align: center;
  text-decoration: none;
  display: inline-block;
  font-family: Arial, Helvetica, sans-serif;
  cursor: pointer;
}

.centered {
  display: flex;
  justify-content: center;
  align-items: center;
  border-style: dashed;
  border-color: transparent;
}

.right {
  display: flex;
  justify-content: right;
  align-items: center;
  border-style: dashed;
  border-color: rgb(88, 81, 81);
}

.flexColumn {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

#sliderOutput {
  font-size: 300%;
  /* added shadow while experimenting */
  text-shadow: 2px 2px 3px whitesmoke;
  font-weight: bold;
  margin: 5px 0 5px 0;
}

.divParent {
  display: flex;
  flex-flow: row;
  justify-content: center;
  align-items: center;
  gap: 2%;
  border-style: dashed;
  border-color: transparent;
  position: relative;
}

.divParent2 {
  display: flex;
  flex-flow: row;
  justify-content: center;
  align-items: center;
  gap: 2%;
  border-style: dashed;
  border-color: transparent;
  position: relative;

  width: 70%;
  margin: auto;
  margin-top: 20px;
}

.divChild {
  font-size: 125%;
  border-style: dashed;
  border-color: transparent;
}

.divChildHeader {
  flex: auto;
  justify-content: center;
  align-items: center;
  text-align: center;
  border-style: dashed;
  border-color: transparent;
}

.divChild2 {
  position: absolute;
  right: 0;
  padding: 0px 5px 0px 5px;
  margin-right: 2%;
  color: #f4f4f8;
  background: white;
  border-style: solid;
  border-width: 1px;
  border-color: white;
  border-radius: 5px;
  transition: 100ms ease-in-out;
}

.divChild2:hover {
  background: white;
  border-color: white;
  border-radius: 10px;
}

.inputs {
  font-size: 100%;
  text-align: center;
  cursor: pointer;
}

#tempoSlider {
  margin: 5px 0 5px 0;
  width: 75%;
  cursor: pointer;
}

#startStopBut {
  padding: 15px;
  font-size: larger;
  cursor: pointer;
  transition: 50ms ease-in-out;
}

#startStopBut:hover {
  color: rgba(108, 92, 231, 1);
}

#beatSpace {
  border-color: #f3aca1;
  border-style: ridge;
  display: none;
}

/* the code below should animation a circle which should eventually pulse for each beat */
#beatAnimation {
  padding: 50px;
  background-color: #cfd9df;
  border-radius: 5px;
  margin: 0;
  height: 25px;
  display: flex; /* still learning what flex is */
  align-items: center; /* aligns vertically */
  justify-content: center; /* aligns horizontally */
}

.beatAnimation {
  animation: pulse 5s infinite; /* makes the animation - infinite is how many iterations */
  background-color: rgba(108, 92, 231, 1);
  border-radius: 50%; /* makes it a circle */
  height: 75px;
  width: 75px;
}

@keyframes pulse {
  /* note the reference to pulse above */
  0% {
    transform: scale(1); /* baseline */
  }

  5% {
    transform: scale(1.2); /* pulses out */
    box-shadow: 0 0 0 0 rgba(108, 92, 231, 0.5); /* pulse wave starts */
  }

  90% {
    transform: scale(1.2);
    box-shadow: 0 0 0 15px rgba(108, 92, 231, 0); /* pulse wave fades */
  }

  100% {
    transform: scale(1); /* shrinks back to starting size */
  }
}

.floatRight {
  float: right;
}
.floatLeft {
  float: left;
}

.beatEmphasisContainer {
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: flex-end;
  padding: 10px;
  border-color: transparent;
  border-style: dashed;
  background-color: transparent;
}

.beatEmphasisBoxes {
  display: flex;
  flex-direction: column;
  flex: 1 1 10px;
  max-width: 100px;
  border-style: dashed;
  border-color: transparent;
  align-items: stretch;
  justify-content: end;
  cursor: pointer;
}

.beatEmphasisStack {
  height: 25px;
  border: 1px solid rgba(95, 39, 205, 1);
  background-color: rgba(95, 39, 205, 0.25);
  transition: 125ms ease-in-out;
  border-radius: 3px;
  box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.2);
}

/* experimented with scaling on hover */
/* this method styles all children */
.beatEmphasisBoxes:hover .beatEmphasisStack {
  background-color: rgba(95, 39, 205, 0.5);
  transform: scale(1);
}

.beatEmphasisText {
  /* need more practice with vmin concept */
  padding-top: 10px;
  font-size: 2vmin;
  min-width: 5px;
  background-color: transparent;
  text-align: center;
  font-family: Arial, Helvetica, sans-serif;
}

/* input[type="checkbox"] means only that input type is styled */
/* this makes the checkbox itself disappear, I think */
input[type="checkbox"] {
  display: none;
}

/* label style when NOT checked */
input[type="checkbox"] + label {
  background: url("volume-off-64px.png");
  height: 64px;
  width: 64px;
  display: inline-block;
}

/* label style when checked */
input[type="checkbox"]:checked + label {
  background: url("volume-on-64px.png");
  height: 64px;
  width: 64px;
  display: inline-block;
}

article {
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: center;
  height: 250px;
  position: relative;
  background-color: #fff;
  border-color: transparent;
  border-style: solid;
  margin: 10px;
  border-radius: 8px;
  box-shadow: 5px 5px 15px rgba(0, 0, 0, 0.25);
}

.tempoDisplay {
  position: absolute;
  top: 0;
  left: 0;
  z-index: 1;
  color: black;
  padding: 1%;
  font-size: large;
}

.outer-circle {
  background-color: rgba(108, 92, 231, 1);
  border-radius: 50%; /* makes it a circle */
  height: 220px;
  width: 220px;
  position: absolute;
  box-shadow: 5px 5px 10px 2px rgba(108, 92, 231, 0.3); /* pulse wave starts */
}

.inner-circle {
  background-color: white;
  border-radius: 50%; /* makes it a circle */
  height: 210px;
  width: 210px;
  position: absolute;
}

.center-dot {
  background-color: black;
  border-radius: 35%; /* makes it a circle */
  height: 7px;
  width: 7px;
  position: absolute;
}

.hand {
  background: black;
  height: 125px;
  width: 5px;
  top: 0%;
  position: absolute;
  border-radius: 50%;
  transform-origin: bottom;
  box-shadow: 0px 0px 5px 1px rgba(0, 0, 0, 0.2);
}

/* attempting to pause animations */
.hide {
  display: none;
}

/* use this if toggling class for the hand to animate
@keyframes rotate {
  100% {
    transform: rotateZ(360deg);
  }
}

.handAnimate {
  background: black;
  height: 125px;
  width: 5px;
  top: 0%;
  position: absolute;
  transform-origin: bottom;
  animation: rotate 2s infinite linear;
}
*/
