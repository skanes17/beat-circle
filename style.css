body {
  font-family: Arial, Helvetica, sans-serif;
  background: linear-gradient(135deg, #525252 0%, #323232 100%);
  color: #222f3e;
  margin: 0;
  padding: 0;
}

h1 {
  font-size: 250%;
  color: #f4f4f8;
  margin: 0;
  padding: 1%;
  text-shadow: 0px 3px 2px rgba(0, 0, 0, 1);
}

.divStyle {
  padding: 1%;
  border-width: 2px;
  border-style: dashed;
  border-color: transparent;
  background-color: white;
}

.roundBorder {
  border-radius: 10px;
}

#container {
  border-style: dashed;
  border-color: lightgray;
  border-radius: 8px;
  width: 70%;
  margin: auto;
  background-color: #c8d6e5;
  box-shadow: 5px 5px 15px rgba(0, 0, 0, 0.5);
}

.flexColumn {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

#sliderOutput {
  font-size: 300%;
  /* added shadow while experimenting */
  text-shadow: 0px 2px 3px whitesmoke;
  font-weight: bold;
  margin: 5px 0 5px 0;
}

.divParent {
  display: flex;
  flex-flow: row;
  justify-content: center;
  align-items: center;
  gap: 2%;
  position: relative;
}

.divParent2 {
  display: flex;
  flex-flow: row;
  justify-content: center;
  align-items: center;
  gap: 2%;
  position: relative;
  width: 70%;
  margin: auto;
  margin-top: 20px;
}

.divChild {
  font-size: 125%;
}

.divChildHeader {
  flex: auto;
  justify-content: center;
  align-items: center;
  text-align: center;
}

.volumeIcon {
  transition: 100ms ease-in-out;
}

.volumeIcon:hover {
  opacity: 0.9;
}

.inputs {
  font-size: 100%;
  text-align: center;
  cursor: pointer;
}

#tempoSlider {
  margin: 5px 0 5px 0;
  width: 75%;
  cursor: pointer;
}

.addMargins {
  padding: 16px 0 16px 0;
}

.material-icons.md-36 {
  font-size: 36px;
}

.material-icons.md-48 {
  font-size: 48px;
}
.material-icons.md-dark {
  color: rgba(0, 0, 0, 0.54);
}
.material-icons.md-dark.md-inactive {
  color: rgba(0, 0, 0, 0.26);
}

.beatEmphasisContainer {
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: flex-end;
  padding: 10px 10px 5px 10px;
}

.beatEmphasisBoxes {
  display: flex;
  flex-direction: column;
  flex: 1 1 10px;
  max-width: 100px;
  border-style: dashed;
  border-color: transparent;
  align-items: stretch;
  justify-content: end;
  cursor: pointer;
}

.beatEmphasisStack {
  height: 25px;
  border: 1px solid rgba(95, 39, 205, 1);
  background-color: rgba(95, 39, 205, 0.25);
  transition: 125ms ease-in-out;
  border-radius: 3px;
  box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.2);
}

/* experimented with scaling on hover */
/* this method styles all children */
.beatEmphasisBoxes:hover .beatEmphasisStack {
  background-color: rgba(95, 39, 205, 0.5);
  transform: scale(1);
}

.playContainer {
  height: 48px;
  width: 48px;
  border-radius: 8px;
  background-color: white;
  display: grid;
  box-shadow: 0px 2px 5px black;
  user-select: none; /* won't select on double-click */
}

.playContainer:active {
  transform: scale(0.9);
}

.playButton {
  cursor: pointer;
}

/* styles #volumeIcon living inside .divChild2 */
.volumeContainer > #volumeIcon {
  user-select: none;
}

.volumeButton {
  cursor: pointer;
}

.toggleContainer {
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: flex-start;
  padding: 0 10px 0 10px;
  cursor: pointer;
}

.emphasisToggle {
  display: flex;
  flex-direction: column;
  flex: 1 1 10px;
  max-width: 100px;
  border-style: dashed;
  border-color: transparent;
  align-items: center;
  justify-content: center;
  cursor: pointer;
}

/* hides default checkboxes */
.emphasisToggle input[type="checkbox"] {
  display: none;
}

/* defines label style for unchecked inputs */
.emphasisToggle input[type="checkbox"] + label {
  display: flex;
  width: 75%;
  height: 0.8em;
  margin: auto;
  border-radius: 0.5em;
  border-style: solid;
  border-width: 1px;
  border-color: #cfcaca;
  border-radius: 0.5em;
  background: #d1cbcb;
  /* box shadow to the left of the circle */
  box-shadow: inset 0px 1px 2.5px rgba(0, 0, 0, 0.3);
  cursor: pointer;
  transition: background 0.1s ease-in-out;
}

/* defines label style for checked inputs */
.emphasisToggle input[type="checkbox"]:checked + label {
  background: #47cf73;
  border-color: #cfcaca;
  box-shadow: inset 0px -1px 2.5px rgba(0, 0, 0, 0.3);
}

.emphasisToggle input[type="checkbox"]:disabled + label {
  opacity: 0.5;
}

.hidden {
  display: none;
}

article {
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: center;
  height: 250px;
  position: relative;
  background-color: #f7f2f2;
  border-color: transparent;
  border-style: solid;
  margin: 10px;
  border-radius: 8px;
  box-shadow: 5px 5px 15px rgba(0, 0, 0, 0.25);
}

.outer-circle {
  background-color: rgba(108, 92, 231, 1);
  border-radius: 50%; /* makes it a circle */
  height: 220px;
  width: 220px;
  position: absolute;
  box-shadow: 5px 5px 10px 2px rgba(108, 92, 231, 0.3); /* pulse wave starts */
}

.inner-circle {
  background-color: white;
  border-radius: 50%; /* makes it a circle */
  height: 210px;
  width: 210px;
  position: absolute;
}

.center-dot {
  background-color: black;
  border-radius: 35%; /* makes it a circle */
  height: 7px;
  width: 7px;
  position: absolute;
}

.hand {
  background: black;
  height: 125px;
  width: 5px;
  top: 0%;
  position: absolute;
  border-radius: 50%;
  transform-origin: bottom;
  box-shadow: 0px 0px 5px 1px rgba(0, 0, 0, 0.2);
}
